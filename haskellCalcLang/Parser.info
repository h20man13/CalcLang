-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from Parser.y
-----------------------------------------------------------------------------

state 30 contains 1 shift/reduce conflicts.
state 33 contains 1 reduce/reduce conflicts.
state 76 contains 2 reduce/reduce conflicts.

rule 4 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseAst -> Line                            (0)
	Line -> Ident '=' Expression 'end'                 (1)
	Line -> Ident '(' Paramaters ')' '=' Expression 'end'   (2)
	Line -> Expression 'end'                           (3)
	Paramaters -> Ident                                (4)
	Paramaters -> Paramaters ',' Ident                 (5)
	Expression -> Logical 'for' Logical 'else' Expression   (6)
	Expression -> Logical                              (7)
	Logical -> Logical 'and' Relational                (8)
	Logical -> Logical 'or' Relational                 (9)
	Logical -> Relational                              (10)
	Relational -> Expr1 '<' Expr1                      (11)
	Relational -> Expr1 '>' Expr1                      (12)
	Relational -> Expr1 '<=' Expr1                     (13)
	Relational -> Expr1 '>=' Expr1                     (14)
	Relational -> Expr1 '!=' Expr1                     (15)
	Relational -> Expr1 '==' Expr1                     (16)
	Relational -> Expr1                                (17)
	Expr1 -> Expr1 '+' Term                            (18)
	Expr1 -> Expr1 '-' Term                            (19)
	Expr1 -> Term                                      (20)
	Term -> Term '*' Unary                             (21)
	Term -> Term '/' Unary                             (22)
	Term -> Term '.' Unary                             (23)
	Term -> Unary                                      (24)
	Unary -> '-' Unary                                 (25)
	Unary -> 'not' Unary                               (26)
	Unary -> '+' Unary                                 (27)
	Unary -> Power                                     (28)
	Power -> Primary '^' Power                         (29)
	Power -> Primary                                   (30)
	Primary -> '(' Expression ')'                      (31)
	Primary -> '(' Expressions ')'                     (32)
	Primary -> '(' Applications ')' '(' Expressions ')'   (33)
	Primary -> '{' Expressions '}'                     (34)
	Primary -> Ident '(' Expressions ')'               (35)
	Primary -> Ident                                   (36)
	Primary -> '$' Number                              (37)
	Primary -> Number '%'                              (38)
	Primary -> Number                                  (39)
	Number -> IntT                                     (40)
	Number -> RealT                                    (41)
	Expressions -> Expression                          (42)
	Expressions -> Expressions ',' Expression          (43)
	Applications -> Ident                              (44)
	Applications -> Applications 'o' Ident             (45)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'for'          { FOR }
	'='            { IS }
	'else'         { ELSE }
	'not'          { NOT }
	'and'          { AND }
	'or'           { OR }
	'=='           { EQUALS }
	')'            { RPAR }
	'('            { LPAR }
	'{'            { LCURL }
	'}'            { RCURL }
	','            { COMMA }
	'+'            { POSITIVE }
	'-'            { NEGATIVE }
	'^'            { CARROT }
	'*'            { ASTRIX }
	'/'            { SLASH }
	'.'            { DOT }
	'>='           { GEQ }
	'<='           { LEQ }
	'<'            { LTAN }
	'>'            { GTAN }
	'!='           { NE }
	'o'            { OF }
	'$'            { DOLLAR }
	'%'            { PERCENT }
	IntT           { INTEGER $$ }
	Ident          { IDENT $$ }
	RealT          { REAL $$ }
	'end'          { NEWLINE }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseAst rule  0
	Line            rules 1, 2, 3
	Paramaters      rules 4, 5
	Expression      rules 6, 7
	Logical         rules 8, 9, 10
	Relational      rules 11, 12, 13, 14, 15, 16, 17
	Expr1           rules 18, 19, 20
	Term            rules 21, 22, 23, 24
	Unary           rules 25, 26, 27, 28
	Power           rules 29, 30
	Primary         rules 31, 32, 33, 34, 35, 36, 37, 38, 39
	Number          rules 40, 41
	Expressions     rules 42, 43
	Applications    rules 44, 45

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 20
	RealT          shift, and enter state 21

	Line           goto state 3
	Expression     goto state 4
	Logical        goto state 5
	Relational     goto state 6
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 1


	Ident          shift, and enter state 2


State 2

	Line -> Ident . '=' Expression 'end'                (rule 1)

	'='            shift, and enter state 22


State 3

	%start_parseAst -> Line .                           (rule 0)

	%eof           accept


State 4

	Line -> Expression . 'end'                          (rule 3)

	'end'          shift, and enter state 51


State 5

	Expression -> Logical . 'for' Logical 'else' Expression    (rule 6)
	Expression -> Logical .                             (rule 7)
	Logical -> Logical . 'and' Relational               (rule 8)
	Logical -> Logical . 'or' Relational                (rule 9)

	'for'          shift, and enter state 48
	'and'          shift, and enter state 49
	'or'           shift, and enter state 50
	')'            reduce using rule 7
	'}'            reduce using rule 7
	','            reduce using rule 7
	'end'          reduce using rule 7


State 6

	Logical -> Relational .                             (rule 10)

	'for'          reduce using rule 10
	'else'         reduce using rule 10
	'and'          reduce using rule 10
	'or'           reduce using rule 10
	')'            reduce using rule 10
	'}'            reduce using rule 10
	','            reduce using rule 10
	'end'          reduce using rule 10


State 7

	Relational -> Expr1 . '<' Expr1                     (rule 11)
	Relational -> Expr1 . '>' Expr1                     (rule 12)
	Relational -> Expr1 . '<=' Expr1                    (rule 13)
	Relational -> Expr1 . '>=' Expr1                    (rule 14)
	Relational -> Expr1 . '!=' Expr1                    (rule 15)
	Relational -> Expr1 . '==' Expr1                    (rule 16)
	Relational -> Expr1 .                               (rule 17)
	Expr1 -> Expr1 . '+' Term                           (rule 18)
	Expr1 -> Expr1 . '-' Term                           (rule 19)

	'for'          reduce using rule 17
	'else'         reduce using rule 17
	'and'          reduce using rule 17
	'or'           reduce using rule 17
	'=='           shift, and enter state 40
	')'            reduce using rule 17
	'}'            reduce using rule 17
	','            reduce using rule 17
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'>='           shift, and enter state 43
	'<='           shift, and enter state 44
	'<'            shift, and enter state 45
	'>'            shift, and enter state 46
	'!='           shift, and enter state 47
	'end'          reduce using rule 17


State 8

	Expr1 -> Term .                                     (rule 20)
	Term -> Term . '*' Unary                            (rule 21)
	Term -> Term . '/' Unary                            (rule 22)
	Term -> Term . '.' Unary                            (rule 23)

	'for'          reduce using rule 20
	'else'         reduce using rule 20
	'and'          reduce using rule 20
	'or'           reduce using rule 20
	'=='           reduce using rule 20
	')'            reduce using rule 20
	'}'            reduce using rule 20
	','            reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'.'            shift, and enter state 39
	'>='           reduce using rule 20
	'<='           reduce using rule 20
	'<'            reduce using rule 20
	'>'            reduce using rule 20
	'!='           reduce using rule 20
	'end'          reduce using rule 20


State 9

	Term -> Unary .                                     (rule 24)

	'for'          reduce using rule 24
	'else'         reduce using rule 24
	'and'          reduce using rule 24
	'or'           reduce using rule 24
	'=='           reduce using rule 24
	')'            reduce using rule 24
	'}'            reduce using rule 24
	','            reduce using rule 24
	'+'            reduce using rule 24
	'-'            reduce using rule 24
	'*'            reduce using rule 24
	'/'            reduce using rule 24
	'.'            reduce using rule 24
	'>='           reduce using rule 24
	'<='           reduce using rule 24
	'<'            reduce using rule 24
	'>'            reduce using rule 24
	'!='           reduce using rule 24
	'end'          reduce using rule 24


State 10

	Unary -> Power .                                    (rule 28)

	'for'          reduce using rule 28
	'else'         reduce using rule 28
	'and'          reduce using rule 28
	'or'           reduce using rule 28
	'=='           reduce using rule 28
	')'            reduce using rule 28
	'}'            reduce using rule 28
	','            reduce using rule 28
	'+'            reduce using rule 28
	'-'            reduce using rule 28
	'*'            reduce using rule 28
	'/'            reduce using rule 28
	'.'            reduce using rule 28
	'>='           reduce using rule 28
	'<='           reduce using rule 28
	'<'            reduce using rule 28
	'>'            reduce using rule 28
	'!='           reduce using rule 28
	'end'          reduce using rule 28


State 11

	Power -> Primary . '^' Power                        (rule 29)
	Power -> Primary .                                  (rule 30)

	'for'          reduce using rule 30
	'else'         reduce using rule 30
	'and'          reduce using rule 30
	'or'           reduce using rule 30
	'=='           reduce using rule 30
	')'            reduce using rule 30
	'}'            reduce using rule 30
	','            reduce using rule 30
	'+'            reduce using rule 30
	'-'            reduce using rule 30
	'^'            shift, and enter state 36
	'*'            reduce using rule 30
	'/'            reduce using rule 30
	'.'            reduce using rule 30
	'>='           reduce using rule 30
	'<='           reduce using rule 30
	'<'            reduce using rule 30
	'>'            reduce using rule 30
	'!='           reduce using rule 30
	'end'          reduce using rule 30


State 12

	Primary -> Number . '%'                             (rule 38)
	Primary -> Number .                                 (rule 39)

	'for'          reduce using rule 39
	'else'         reduce using rule 39
	'and'          reduce using rule 39
	'or'           reduce using rule 39
	'=='           reduce using rule 39
	')'            reduce using rule 39
	'}'            reduce using rule 39
	','            reduce using rule 39
	'+'            reduce using rule 39
	'-'            reduce using rule 39
	'^'            reduce using rule 39
	'*'            reduce using rule 39
	'/'            reduce using rule 39
	'.'            reduce using rule 39
	'>='           reduce using rule 39
	'<='           reduce using rule 39
	'<'            reduce using rule 39
	'>'            reduce using rule 39
	'!='           reduce using rule 39
	'%'            shift, and enter state 35
	'end'          reduce using rule 39


State 13

	Unary -> 'not' . Unary                              (rule 26)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Unary          goto state 34
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 14

	Primary -> '(' . Expression ')'                     (rule 31)
	Primary -> '(' . Expressions ')'                    (rule 32)
	Primary -> '(' . Applications ')' '(' Expressions ')'    (rule 33)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 33
	RealT          shift, and enter state 21

	Expression     goto state 30
	Logical        goto state 5
	Relational     goto state 6
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12
	Expressions    goto state 31
	Applications   goto state 32

State 15

	Primary -> '{' . Expressions '}'                    (rule 34)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expression     goto state 28
	Logical        goto state 5
	Relational     goto state 6
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12
	Expressions    goto state 29

State 16

	Unary -> '+' . Unary                                (rule 27)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Unary          goto state 27
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 17

	Unary -> '-' . Unary                                (rule 25)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Unary          goto state 25
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 18

	Primary -> '$' . Number                             (rule 37)

	IntT           shift, and enter state 19
	RealT          shift, and enter state 21

	Number         goto state 24

State 19

	Number -> IntT .                                    (rule 40)

	'for'          reduce using rule 40
	'else'         reduce using rule 40
	'and'          reduce using rule 40
	'or'           reduce using rule 40
	'=='           reduce using rule 40
	')'            reduce using rule 40
	'}'            reduce using rule 40
	','            reduce using rule 40
	'+'            reduce using rule 40
	'-'            reduce using rule 40
	'^'            reduce using rule 40
	'*'            reduce using rule 40
	'/'            reduce using rule 40
	'.'            reduce using rule 40
	'>='           reduce using rule 40
	'<='           reduce using rule 40
	'<'            reduce using rule 40
	'>'            reduce using rule 40
	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'end'          reduce using rule 40


State 20

	Line -> Ident . '=' Expression 'end'                (rule 1)
	Line -> Ident . '(' Paramaters ')' '=' Expression 'end'    (rule 2)
	Primary -> Ident . '(' Expressions ')'              (rule 35)
	Primary -> Ident .                                  (rule 36)

	'for'          reduce using rule 36
	'='            shift, and enter state 22
	'and'          reduce using rule 36
	'or'           reduce using rule 36
	'=='           reduce using rule 36
	'('            shift, and enter state 23
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'^'            reduce using rule 36
	'*'            reduce using rule 36
	'/'            reduce using rule 36
	'.'            reduce using rule 36
	'>='           reduce using rule 36
	'<='           reduce using rule 36
	'<'            reduce using rule 36
	'>'            reduce using rule 36
	'!='           reduce using rule 36
	'end'          reduce using rule 36


State 21

	Number -> RealT .                                   (rule 41)

	'for'          reduce using rule 41
	'else'         reduce using rule 41
	'and'          reduce using rule 41
	'or'           reduce using rule 41
	'=='           reduce using rule 41
	')'            reduce using rule 41
	'}'            reduce using rule 41
	','            reduce using rule 41
	'+'            reduce using rule 41
	'-'            reduce using rule 41
	'^'            reduce using rule 41
	'*'            reduce using rule 41
	'/'            reduce using rule 41
	'.'            reduce using rule 41
	'>='           reduce using rule 41
	'<='           reduce using rule 41
	'<'            reduce using rule 41
	'>'            reduce using rule 41
	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'end'          reduce using rule 41


State 22

	Line -> Ident '=' . Expression 'end'                (rule 1)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expression     goto state 77
	Logical        goto state 5
	Relational     goto state 6
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 23

	Line -> Ident '(' . Paramaters ')' '=' Expression 'end'    (rule 2)
	Primary -> Ident '(' . Expressions ')'              (rule 35)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 76
	RealT          shift, and enter state 21

	Paramaters     goto state 74
	Expression     goto state 28
	Logical        goto state 5
	Relational     goto state 6
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12
	Expressions    goto state 75

State 24

	Primary -> '$' Number .                             (rule 37)

	'for'          reduce using rule 37
	'else'         reduce using rule 37
	'and'          reduce using rule 37
	'or'           reduce using rule 37
	'=='           reduce using rule 37
	')'            reduce using rule 37
	'}'            reduce using rule 37
	','            reduce using rule 37
	'+'            reduce using rule 37
	'-'            reduce using rule 37
	'^'            reduce using rule 37
	'*'            reduce using rule 37
	'/'            reduce using rule 37
	'.'            reduce using rule 37
	'>='           reduce using rule 37
	'<='           reduce using rule 37
	'<'            reduce using rule 37
	'>'            reduce using rule 37
	'!='           reduce using rule 37
	'end'          reduce using rule 37


State 25

	Unary -> '-' Unary .                                (rule 25)

	'for'          reduce using rule 25
	'else'         reduce using rule 25
	'and'          reduce using rule 25
	'or'           reduce using rule 25
	'=='           reduce using rule 25
	')'            reduce using rule 25
	'}'            reduce using rule 25
	','            reduce using rule 25
	'+'            reduce using rule 25
	'-'            reduce using rule 25
	'*'            reduce using rule 25
	'/'            reduce using rule 25
	'.'            reduce using rule 25
	'>='           reduce using rule 25
	'<='           reduce using rule 25
	'<'            reduce using rule 25
	'>'            reduce using rule 25
	'!='           reduce using rule 25
	'end'          reduce using rule 25


State 26

	Primary -> Ident . '(' Expressions ')'              (rule 35)
	Primary -> Ident .                                  (rule 36)

	'for'          reduce using rule 36
	'else'         reduce using rule 36
	'and'          reduce using rule 36
	'or'           reduce using rule 36
	'=='           reduce using rule 36
	')'            reduce using rule 36
	'('            shift, and enter state 67
	'}'            reduce using rule 36
	','            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'^'            reduce using rule 36
	'*'            reduce using rule 36
	'/'            reduce using rule 36
	'.'            reduce using rule 36
	'>='           reduce using rule 36
	'<='           reduce using rule 36
	'<'            reduce using rule 36
	'>'            reduce using rule 36
	'!='           reduce using rule 36
	'end'          reduce using rule 36


State 27

	Unary -> '+' Unary .                                (rule 27)

	'for'          reduce using rule 27
	'else'         reduce using rule 27
	'and'          reduce using rule 27
	'or'           reduce using rule 27
	'=='           reduce using rule 27
	')'            reduce using rule 27
	'}'            reduce using rule 27
	','            reduce using rule 27
	'+'            reduce using rule 27
	'-'            reduce using rule 27
	'*'            reduce using rule 27
	'/'            reduce using rule 27
	'.'            reduce using rule 27
	'>='           reduce using rule 27
	'<='           reduce using rule 27
	'<'            reduce using rule 27
	'>'            reduce using rule 27
	'!='           reduce using rule 27
	'end'          reduce using rule 27


State 28

	Expressions -> Expression .                         (rule 42)

	')'            reduce using rule 42
	'}'            reduce using rule 42
	','            reduce using rule 42


State 29

	Primary -> '{' Expressions . '}'                    (rule 34)
	Expressions -> Expressions . ',' Expression         (rule 43)

	'}'            shift, and enter state 73
	','            shift, and enter state 71


State 30

	Primary -> '(' Expression . ')'                     (rule 31)
	Expressions -> Expression .                         (rule 42)

	')'            shift, and enter state 72
			(reduce using rule 42)

	','            reduce using rule 42


State 31

	Primary -> '(' Expressions . ')'                    (rule 32)
	Expressions -> Expressions . ',' Expression         (rule 43)

	')'            shift, and enter state 70
	','            shift, and enter state 71


State 32

	Primary -> '(' Applications . ')' '(' Expressions ')'    (rule 33)
	Applications -> Applications . 'o' Ident            (rule 45)

	')'            shift, and enter state 68
	'o'            shift, and enter state 69


State 33

	Primary -> Ident . '(' Expressions ')'              (rule 35)
	Primary -> Ident .                                  (rule 36)
	Applications -> Ident .                             (rule 44)

	'for'          reduce using rule 36
	'and'          reduce using rule 36
	'or'           reduce using rule 36
	'=='           reduce using rule 36
	')'            reduce using rule 44
			(reduce using rule 36)

	'('            shift, and enter state 67
	','            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'^'            reduce using rule 36
	'*'            reduce using rule 36
	'/'            reduce using rule 36
	'.'            reduce using rule 36
	'>='           reduce using rule 36
	'<='           reduce using rule 36
	'<'            reduce using rule 36
	'>'            reduce using rule 36
	'!='           reduce using rule 36
	'o'            reduce using rule 44


State 34

	Unary -> 'not' Unary .                              (rule 26)

	'for'          reduce using rule 26
	'else'         reduce using rule 26
	'and'          reduce using rule 26
	'or'           reduce using rule 26
	'=='           reduce using rule 26
	')'            reduce using rule 26
	'}'            reduce using rule 26
	','            reduce using rule 26
	'+'            reduce using rule 26
	'-'            reduce using rule 26
	'*'            reduce using rule 26
	'/'            reduce using rule 26
	'.'            reduce using rule 26
	'>='           reduce using rule 26
	'<='           reduce using rule 26
	'<'            reduce using rule 26
	'>'            reduce using rule 26
	'!='           reduce using rule 26
	'end'          reduce using rule 26


State 35

	Primary -> Number '%' .                             (rule 38)

	'for'          reduce using rule 38
	'else'         reduce using rule 38
	'and'          reduce using rule 38
	'or'           reduce using rule 38
	'=='           reduce using rule 38
	')'            reduce using rule 38
	'}'            reduce using rule 38
	','            reduce using rule 38
	'+'            reduce using rule 38
	'-'            reduce using rule 38
	'^'            reduce using rule 38
	'*'            reduce using rule 38
	'/'            reduce using rule 38
	'.'            reduce using rule 38
	'>='           reduce using rule 38
	'<='           reduce using rule 38
	'<'            reduce using rule 38
	'>'            reduce using rule 38
	'!='           reduce using rule 38
	'end'          reduce using rule 38


State 36

	Power -> Primary '^' . Power                        (rule 29)

	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Power          goto state 66
	Primary        goto state 11
	Number         goto state 12

State 37

	Term -> Term '*' . Unary                            (rule 21)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Unary          goto state 65
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 38

	Term -> Term '/' . Unary                            (rule 22)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Unary          goto state 64
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 39

	Term -> Term '.' . Unary                            (rule 23)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Unary          goto state 63
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 40

	Relational -> Expr1 '==' . Expr1                    (rule 16)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expr1          goto state 62
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 41

	Expr1 -> Expr1 '+' . Term                           (rule 18)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Term           goto state 61
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 42

	Expr1 -> Expr1 '-' . Term                           (rule 19)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Term           goto state 60
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 43

	Relational -> Expr1 '>=' . Expr1                    (rule 14)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expr1          goto state 59
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 44

	Relational -> Expr1 '<=' . Expr1                    (rule 13)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expr1          goto state 58
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 45

	Relational -> Expr1 '<' . Expr1                     (rule 11)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expr1          goto state 57
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 46

	Relational -> Expr1 '>' . Expr1                     (rule 12)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expr1          goto state 56
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 47

	Relational -> Expr1 '!=' . Expr1                    (rule 15)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expr1          goto state 55
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 48

	Expression -> Logical 'for' . Logical 'else' Expression    (rule 6)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Logical        goto state 54
	Relational     goto state 6
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 49

	Logical -> Logical 'and' . Relational               (rule 8)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Relational     goto state 53
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 50

	Logical -> Logical 'or' . Relational                (rule 9)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Relational     goto state 52
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 51

	Line -> Expression 'end' .                          (rule 3)

	%eof           reduce using rule 3


State 52

	Logical -> Logical 'or' Relational .                (rule 9)

	'for'          reduce using rule 9
	'else'         reduce using rule 9
	'and'          reduce using rule 9
	'or'           reduce using rule 9
	')'            reduce using rule 9
	'}'            reduce using rule 9
	','            reduce using rule 9
	'end'          reduce using rule 9


State 53

	Logical -> Logical 'and' Relational .               (rule 8)

	'for'          reduce using rule 8
	'else'         reduce using rule 8
	'and'          reduce using rule 8
	'or'           reduce using rule 8
	')'            reduce using rule 8
	'}'            reduce using rule 8
	','            reduce using rule 8
	'end'          reduce using rule 8


State 54

	Expression -> Logical 'for' Logical . 'else' Expression    (rule 6)
	Logical -> Logical . 'and' Relational               (rule 8)
	Logical -> Logical . 'or' Relational                (rule 9)

	'else'         shift, and enter state 85
	'and'          shift, and enter state 49
	'or'           shift, and enter state 50


State 55

	Relational -> Expr1 '!=' Expr1 .                    (rule 15)
	Expr1 -> Expr1 . '+' Term                           (rule 18)
	Expr1 -> Expr1 . '-' Term                           (rule 19)

	'for'          reduce using rule 15
	'else'         reduce using rule 15
	'and'          reduce using rule 15
	'or'           reduce using rule 15
	')'            reduce using rule 15
	'}'            reduce using rule 15
	','            reduce using rule 15
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'end'          reduce using rule 15


State 56

	Relational -> Expr1 '>' Expr1 .                     (rule 12)
	Expr1 -> Expr1 . '+' Term                           (rule 18)
	Expr1 -> Expr1 . '-' Term                           (rule 19)

	'for'          reduce using rule 12
	'else'         reduce using rule 12
	'and'          reduce using rule 12
	'or'           reduce using rule 12
	')'            reduce using rule 12
	'}'            reduce using rule 12
	','            reduce using rule 12
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'end'          reduce using rule 12


State 57

	Relational -> Expr1 '<' Expr1 .                     (rule 11)
	Expr1 -> Expr1 . '+' Term                           (rule 18)
	Expr1 -> Expr1 . '-' Term                           (rule 19)

	'for'          reduce using rule 11
	'else'         reduce using rule 11
	'and'          reduce using rule 11
	'or'           reduce using rule 11
	')'            reduce using rule 11
	'}'            reduce using rule 11
	','            reduce using rule 11
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'end'          reduce using rule 11


State 58

	Relational -> Expr1 '<=' Expr1 .                    (rule 13)
	Expr1 -> Expr1 . '+' Term                           (rule 18)
	Expr1 -> Expr1 . '-' Term                           (rule 19)

	'for'          reduce using rule 13
	'else'         reduce using rule 13
	'and'          reduce using rule 13
	'or'           reduce using rule 13
	')'            reduce using rule 13
	'}'            reduce using rule 13
	','            reduce using rule 13
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'end'          reduce using rule 13


State 59

	Relational -> Expr1 '>=' Expr1 .                    (rule 14)
	Expr1 -> Expr1 . '+' Term                           (rule 18)
	Expr1 -> Expr1 . '-' Term                           (rule 19)

	'for'          reduce using rule 14
	'else'         reduce using rule 14
	'and'          reduce using rule 14
	'or'           reduce using rule 14
	')'            reduce using rule 14
	'}'            reduce using rule 14
	','            reduce using rule 14
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'end'          reduce using rule 14


State 60

	Expr1 -> Expr1 '-' Term .                           (rule 19)
	Term -> Term . '*' Unary                            (rule 21)
	Term -> Term . '/' Unary                            (rule 22)
	Term -> Term . '.' Unary                            (rule 23)

	'for'          reduce using rule 19
	'else'         reduce using rule 19
	'and'          reduce using rule 19
	'or'           reduce using rule 19
	'=='           reduce using rule 19
	')'            reduce using rule 19
	'}'            reduce using rule 19
	','            reduce using rule 19
	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'.'            shift, and enter state 39
	'>='           reduce using rule 19
	'<='           reduce using rule 19
	'<'            reduce using rule 19
	'>'            reduce using rule 19
	'!='           reduce using rule 19
	'end'          reduce using rule 19


State 61

	Expr1 -> Expr1 '+' Term .                           (rule 18)
	Term -> Term . '*' Unary                            (rule 21)
	Term -> Term . '/' Unary                            (rule 22)
	Term -> Term . '.' Unary                            (rule 23)

	'for'          reduce using rule 18
	'else'         reduce using rule 18
	'and'          reduce using rule 18
	'or'           reduce using rule 18
	'=='           reduce using rule 18
	')'            reduce using rule 18
	'}'            reduce using rule 18
	','            reduce using rule 18
	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            shift, and enter state 37
	'/'            shift, and enter state 38
	'.'            shift, and enter state 39
	'>='           reduce using rule 18
	'<='           reduce using rule 18
	'<'            reduce using rule 18
	'>'            reduce using rule 18
	'!='           reduce using rule 18
	'end'          reduce using rule 18


State 62

	Relational -> Expr1 '==' Expr1 .                    (rule 16)
	Expr1 -> Expr1 . '+' Term                           (rule 18)
	Expr1 -> Expr1 . '-' Term                           (rule 19)

	'for'          reduce using rule 16
	'else'         reduce using rule 16
	'and'          reduce using rule 16
	'or'           reduce using rule 16
	')'            reduce using rule 16
	'}'            reduce using rule 16
	','            reduce using rule 16
	'+'            shift, and enter state 41
	'-'            shift, and enter state 42
	'end'          reduce using rule 16


State 63

	Term -> Term '.' Unary .                            (rule 23)

	'for'          reduce using rule 23
	'else'         reduce using rule 23
	'and'          reduce using rule 23
	'or'           reduce using rule 23
	'=='           reduce using rule 23
	')'            reduce using rule 23
	'}'            reduce using rule 23
	','            reduce using rule 23
	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	'.'            reduce using rule 23
	'>='           reduce using rule 23
	'<='           reduce using rule 23
	'<'            reduce using rule 23
	'>'            reduce using rule 23
	'!='           reduce using rule 23
	'end'          reduce using rule 23


State 64

	Term -> Term '/' Unary .                            (rule 22)

	'for'          reduce using rule 22
	'else'         reduce using rule 22
	'and'          reduce using rule 22
	'or'           reduce using rule 22
	'=='           reduce using rule 22
	')'            reduce using rule 22
	'}'            reduce using rule 22
	','            reduce using rule 22
	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	'.'            reduce using rule 22
	'>='           reduce using rule 22
	'<='           reduce using rule 22
	'<'            reduce using rule 22
	'>'            reduce using rule 22
	'!='           reduce using rule 22
	'end'          reduce using rule 22


State 65

	Term -> Term '*' Unary .                            (rule 21)

	'for'          reduce using rule 21
	'else'         reduce using rule 21
	'and'          reduce using rule 21
	'or'           reduce using rule 21
	'=='           reduce using rule 21
	')'            reduce using rule 21
	'}'            reduce using rule 21
	','            reduce using rule 21
	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	'.'            reduce using rule 21
	'>='           reduce using rule 21
	'<='           reduce using rule 21
	'<'            reduce using rule 21
	'>'            reduce using rule 21
	'!='           reduce using rule 21
	'end'          reduce using rule 21


State 66

	Power -> Primary '^' Power .                        (rule 29)

	'for'          reduce using rule 29
	'else'         reduce using rule 29
	'and'          reduce using rule 29
	'or'           reduce using rule 29
	'=='           reduce using rule 29
	')'            reduce using rule 29
	'}'            reduce using rule 29
	','            reduce using rule 29
	'+'            reduce using rule 29
	'-'            reduce using rule 29
	'*'            reduce using rule 29
	'/'            reduce using rule 29
	'.'            reduce using rule 29
	'>='           reduce using rule 29
	'<='           reduce using rule 29
	'<'            reduce using rule 29
	'>'            reduce using rule 29
	'!='           reduce using rule 29
	'end'          reduce using rule 29


State 67

	Primary -> Ident '(' . Expressions ')'              (rule 35)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expression     goto state 28
	Logical        goto state 5
	Relational     goto state 6
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12
	Expressions    goto state 75

State 68

	Primary -> '(' Applications ')' . '(' Expressions ')'    (rule 33)

	'('            shift, and enter state 84


State 69

	Applications -> Applications 'o' . Ident            (rule 45)

	Ident          shift, and enter state 83


State 70

	Primary -> '(' Expressions ')' .                    (rule 32)

	'for'          reduce using rule 32
	'else'         reduce using rule 32
	'and'          reduce using rule 32
	'or'           reduce using rule 32
	'=='           reduce using rule 32
	')'            reduce using rule 32
	'}'            reduce using rule 32
	','            reduce using rule 32
	'+'            reduce using rule 32
	'-'            reduce using rule 32
	'^'            reduce using rule 32
	'*'            reduce using rule 32
	'/'            reduce using rule 32
	'.'            reduce using rule 32
	'>='           reduce using rule 32
	'<='           reduce using rule 32
	'<'            reduce using rule 32
	'>'            reduce using rule 32
	'!='           reduce using rule 32
	'end'          reduce using rule 32


State 71

	Expressions -> Expressions ',' . Expression         (rule 43)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expression     goto state 82
	Logical        goto state 5
	Relational     goto state 6
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 72

	Primary -> '(' Expression ')' .                     (rule 31)

	'for'          reduce using rule 31
	'else'         reduce using rule 31
	'and'          reduce using rule 31
	'or'           reduce using rule 31
	'=='           reduce using rule 31
	')'            reduce using rule 31
	'}'            reduce using rule 31
	','            reduce using rule 31
	'+'            reduce using rule 31
	'-'            reduce using rule 31
	'^'            reduce using rule 31
	'*'            reduce using rule 31
	'/'            reduce using rule 31
	'.'            reduce using rule 31
	'>='           reduce using rule 31
	'<='           reduce using rule 31
	'<'            reduce using rule 31
	'>'            reduce using rule 31
	'!='           reduce using rule 31
	'end'          reduce using rule 31


State 73

	Primary -> '{' Expressions '}' .                    (rule 34)

	'for'          reduce using rule 34
	'else'         reduce using rule 34
	'and'          reduce using rule 34
	'or'           reduce using rule 34
	'=='           reduce using rule 34
	')'            reduce using rule 34
	'}'            reduce using rule 34
	','            reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'^'            reduce using rule 34
	'*'            reduce using rule 34
	'/'            reduce using rule 34
	'.'            reduce using rule 34
	'>='           reduce using rule 34
	'<='           reduce using rule 34
	'<'            reduce using rule 34
	'>'            reduce using rule 34
	'!='           reduce using rule 34
	'end'          reduce using rule 34


State 74

	Line -> Ident '(' Paramaters . ')' '=' Expression 'end'    (rule 2)
	Paramaters -> Paramaters . ',' Ident                (rule 5)

	')'            shift, and enter state 80
	','            shift, and enter state 81


State 75

	Primary -> Ident '(' Expressions . ')'              (rule 35)
	Expressions -> Expressions . ',' Expression         (rule 43)

	')'            shift, and enter state 79
	','            shift, and enter state 71


State 76

	Paramaters -> Ident .                               (rule 4)
	Primary -> Ident . '(' Expressions ')'              (rule 35)
	Primary -> Ident .                                  (rule 36)

	'for'          reduce using rule 36
	'and'          reduce using rule 36
	'or'           reduce using rule 36
	'=='           reduce using rule 36
	')'            reduce using rule 36
			(reduce using rule 4)

	'('            shift, and enter state 67
	','            reduce using rule 36
			(reduce using rule 4)

	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'^'            reduce using rule 36
	'*'            reduce using rule 36
	'/'            reduce using rule 36
	'.'            reduce using rule 36
	'>='           reduce using rule 36
	'<='           reduce using rule 36
	'<'            reduce using rule 36
	'>'            reduce using rule 36
	'!='           reduce using rule 36


State 77

	Line -> Ident '=' Expression . 'end'                (rule 1)

	'end'          shift, and enter state 78


State 78

	Line -> Ident '=' Expression 'end' .                (rule 1)

	%eof           reduce using rule 1


State 79

	Primary -> Ident '(' Expressions ')' .              (rule 35)

	'for'          reduce using rule 35
	'else'         reduce using rule 35
	'and'          reduce using rule 35
	'or'           reduce using rule 35
	'=='           reduce using rule 35
	')'            reduce using rule 35
	'}'            reduce using rule 35
	','            reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'^'            reduce using rule 35
	'*'            reduce using rule 35
	'/'            reduce using rule 35
	'.'            reduce using rule 35
	'>='           reduce using rule 35
	'<='           reduce using rule 35
	'<'            reduce using rule 35
	'>'            reduce using rule 35
	'!='           reduce using rule 35
	'end'          reduce using rule 35


State 80

	Line -> Ident '(' Paramaters ')' . '=' Expression 'end'    (rule 2)

	'='            shift, and enter state 89


State 81

	Paramaters -> Paramaters ',' . Ident                (rule 5)

	Ident          shift, and enter state 88


State 82

	Expressions -> Expressions ',' Expression .         (rule 43)

	')'            reduce using rule 43
	'}'            reduce using rule 43
	','            reduce using rule 43


State 83

	Applications -> Applications 'o' Ident .            (rule 45)

	')'            reduce using rule 45
	'o'            reduce using rule 45


State 84

	Primary -> '(' Applications ')' '(' . Expressions ')'    (rule 33)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expression     goto state 28
	Logical        goto state 5
	Relational     goto state 6
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12
	Expressions    goto state 87

State 85

	Expression -> Logical 'for' Logical 'else' . Expression    (rule 6)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expression     goto state 86
	Logical        goto state 5
	Relational     goto state 6
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 86

	Expression -> Logical 'for' Logical 'else' Expression .    (rule 6)

	')'            reduce using rule 6
	'}'            reduce using rule 6
	','            reduce using rule 6
	'end'          reduce using rule 6


State 87

	Primary -> '(' Applications ')' '(' Expressions . ')'    (rule 33)
	Expressions -> Expressions . ',' Expression         (rule 43)

	')'            shift, and enter state 91
	','            shift, and enter state 71


State 88

	Paramaters -> Paramaters ',' Ident .                (rule 5)

	')'            reduce using rule 5
	','            reduce using rule 5


State 89

	Line -> Ident '(' Paramaters ')' '=' . Expression 'end'    (rule 2)

	'not'          shift, and enter state 13
	'('            shift, and enter state 14
	'{'            shift, and enter state 15
	'+'            shift, and enter state 16
	'-'            shift, and enter state 17
	'$'            shift, and enter state 18
	IntT           shift, and enter state 19
	Ident          shift, and enter state 26
	RealT          shift, and enter state 21

	Expression     goto state 90
	Logical        goto state 5
	Relational     goto state 6
	Expr1          goto state 7
	Term           goto state 8
	Unary          goto state 9
	Power          goto state 10
	Primary        goto state 11
	Number         goto state 12

State 90

	Line -> Ident '(' Paramaters ')' '=' Expression . 'end'    (rule 2)

	'end'          shift, and enter state 92


State 91

	Primary -> '(' Applications ')' '(' Expressions ')' .    (rule 33)

	'for'          reduce using rule 33
	'else'         reduce using rule 33
	'and'          reduce using rule 33
	'or'           reduce using rule 33
	'=='           reduce using rule 33
	')'            reduce using rule 33
	'}'            reduce using rule 33
	','            reduce using rule 33
	'+'            reduce using rule 33
	'-'            reduce using rule 33
	'^'            reduce using rule 33
	'*'            reduce using rule 33
	'/'            reduce using rule 33
	'.'            reduce using rule 33
	'>='           reduce using rule 33
	'<='           reduce using rule 33
	'<'            reduce using rule 33
	'>'            reduce using rule 33
	'!='           reduce using rule 33
	'end'          reduce using rule 33


State 92

	Line -> Ident '(' Paramaters ')' '=' Expression 'end' .    (rule 2)

	%eof           reduce using rule 2


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 46
Number of terminals: 30
Number of non-terminals: 14
Number of states: 93
